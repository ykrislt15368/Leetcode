class Solution {
public:
    int traverse(int n,vector<int>& nu,vector<vector<int>>& ed,vector<int>& curr,int src,int cnt){
        curr[src]=nu[src];
        
        for(auto i:ed[src]){
            if(curr[i]) continue;
            curr[src]+=traverse(n,nu,ed,curr,i,cnt);
            
            if(curr[src]>cnt) return 1e7;
        }
        
        if(curr[src]==cnt) return 0;
        return curr[src];
    }
    int componentValue(vector<int>& nu, vector<vector<int>>& ed) {
        
        int n=nu.size();
        int sm=0;
        for(int i=0;i<n;i++) sm+=nu[i];
        
        vector<vector<int>>next(n);
        for(auto e:ed){
            next[e[0]].push_back(e[1]);
            next[e[1]].push_back(e[0]);
        }
        
        for(int i=n;i>=1;i--){
            if(sm%i) continue;
            vector<int> curr(n);
            if(traverse(n,nu,next,curr,0,sm/i)==0) return i-1;
        }
        
        return 0;
    }
};